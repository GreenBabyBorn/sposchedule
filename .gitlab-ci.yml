stages:
  - deploy

deploy_dev:
  stage: deploy
  tags:
    - cloud-ru  # Выполнять на сервере с тегом cloud-ru
  script:
    - echo "Setting up environment files..."
    - cp "${backend_env}" ./backend/.env
    - cp "${frontend_env}" ./frontend/.env

    - echo "Getting Commit SHA..."
    - export SHA_SHORT=$(git rev-parse --short HEAD)
    - echo "SHA_SHORT=${SHA_SHORT}" >> .gitlab-ci.env
    
    - echo "Setting Image Tag..."
    - export IMAGE_TAG="dev-${SHA_SHORT}"
    - echo "IMAGE_TAG=${IMAGE_TAG}" >> .gitlab-ci.env

    - echo "Stopping and removing old containers..."
    - docker compose -f docker-compose.prod.yml -p sposchedule down

    - echo "Rebuilding and starting containers..."
    - docker compose -f docker-compose.prod.yml -p sposchedule up -d --build

  rules:
    - if: $CI_COMMIT_REF_NAME == "dev"

deploy_master:
  stage: deploy
  tags:
    - beget  # Выполнять на сервере с тегом beget
  script:
    - echo "Setting up environment files..."
    - cp "${backend_env_master}" ./backend/.env
    - cp "${frontend_env_master}" ./frontend/.env
    - cp "${db_env_master}" ./.env

    - echo "Getting Commit SHA..."
    - export SHA_SHORT=$(git rev-parse --short HEAD)
    - echo "SHA_SHORT=${SHA_SHORT}" >> .gitlab-ci.env
    
    - echo "Setting Image Tag..."
    - export IMAGE_TAG="master-${SHA_SHORT}"
    - echo "IMAGE_TAG=${IMAGE_TAG}" >> .gitlab-ci.env

    - echo "Stopping and removing old containers..."
    - docker compose -f docker-compose.prod.yml -p sposchedule down

    - echo "Rebuilding and starting containers..."
    - docker compose -f docker-compose.prod.yml -p sposchedule up -d --build

  rules:
    - if: $CI_COMMIT_REF_NAME == "master"