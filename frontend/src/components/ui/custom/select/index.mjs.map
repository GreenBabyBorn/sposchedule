{"version":3,"file":"index.mjs","sources":["../../src/select/BaseSelect.vue","../../src/select/Select.vue","../../src/select/Select.vue?vue&type=template&id=eca508e8&lang.js"],"sourcesContent":["<script>\nimport BaseInput from '@primevue/core/baseinput';\nimport SelectStyle from 'primevue/select/style';\n\nexport default {\n    name: 'BaseSelect',\n    extends: BaseInput,\n    props: {\n        options: Array,\n        optionLabel: [String, Function],\n        optionValue: [String, Function],\n        optionDisabled: [String, Function],\n        optionGroupLabel: [String, Function],\n        optionGroupChildren: [String, Function],\n        scrollHeight: {\n            type: String,\n            default: '14rem'\n        },\n        filter: Boolean,\n        filterPlaceholder: String,\n        filterLocale: String,\n        filterMatchMode: {\n            type: String,\n            default: 'contains'\n        },\n        filterFields: {\n            type: Array,\n            default: null\n        },\n        editable: Boolean,\n        placeholder: {\n            type: String,\n            default: null\n        },\n        dataKey: null,\n        showClear: {\n            type: Boolean,\n            default: false\n        },\n        inputId: {\n            type: String,\n            default: null\n        },\n        inputClass: {\n            type: [String, Object],\n            default: null\n        },\n        inputStyle: {\n            type: Object,\n            default: null\n        },\n        labelId: {\n            type: String,\n            default: null\n        },\n        labelClass: {\n            type: [String, Object],\n            default: null\n        },\n        labelStyle: {\n            type: Object,\n            default: null\n        },\n        panelClass: {\n            type: [String, Object],\n            default: null\n        },\n        overlayStyle: {\n            type: Object,\n            default: null\n        },\n        overlayClass: {\n            type: [String, Object],\n            default: null\n        },\n        panelStyle: {\n            type: Object,\n            default: null\n        },\n        appendTo: {\n            type: [String, Object],\n            default: 'body'\n        },\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        clearIcon: {\n            type: String,\n            default: undefined\n        },\n        dropdownIcon: {\n            type: String,\n            default: undefined\n        },\n        filterIcon: {\n            type: String,\n            default: undefined\n        },\n        loadingIcon: {\n            type: String,\n            default: undefined\n        },\n        resetFilterOnHide: {\n            type: Boolean,\n            default: false\n        },\n        resetFilterOnClear: {\n            type: Boolean,\n            default: false\n        },\n        virtualScrollerOptions: {\n            type: Object,\n            default: null\n        },\n        autoOptionFocus: {\n            type: Boolean,\n            default: false\n        },\n        autoFilterFocus: {\n            type: Boolean,\n            default: false\n        },\n        selectOnFocus: {\n            type: Boolean,\n            default: false\n        },\n        focusOnHover: {\n            type: Boolean,\n            default: true\n        },\n        highlightOnSelect: {\n            type: Boolean,\n            default: true\n        },\n        checkmark: {\n            type: Boolean,\n            default: false\n        },\n        filterMessage: {\n            type: String,\n            default: null\n        },\n        selectionMessage: {\n            type: String,\n            default: null\n        },\n        emptySelectionMessage: {\n            type: String,\n            default: null\n        },\n        emptyFilterMessage: {\n            type: String,\n            default: null\n        },\n        emptyMessage: {\n            type: String,\n            default: null\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        },\n        ariaLabel: {\n            type: String,\n            default: null\n        },\n        ariaLabelledby: {\n            type: String,\n            default: null\n        }\n    },\n    style: SelectStyle,\n    provide() {\n        return {\n            $pcSelect: this,\n            $parentInstance: this\n        };\n    }\n};\n</script>\n","<template>\n    <div ref=\"container\" :id=\"id\" :class=\"cx('root')\" @click=\"onContainerClick\" v-bind=\"ptmi('root')\">\n        <input\n            v-if=\"editable\"\n            ref=\"focusInput\"\n            :id=\"labelId || inputId\"\n            type=\"text\"\n            :class=\"[cx('label'), inputClass, labelClass]\"\n            :style=\"[inputStyle, labelStyle]\"\n            :value=\"editableInputValue\"\n            :placeholder=\"placeholder\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            :disabled=\"disabled\"\n            autocomplete=\"off\"\n            role=\"combobox\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            aria-haspopup=\"listbox\"\n            :aria-expanded=\"overlayVisible\"\n            :aria-controls=\"id + '_list'\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            :aria-invalid=\"invalid || undefined\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @input=\"onEditableInput\"\n            v-bind=\"ptm('label')\"\n        />\n        <span\n            v-else\n            ref=\"focusInput\"\n            :id=\"labelId || inputId\"\n            :class=\"[cx('label'), inputClass, labelClass]\"\n            :style=\"[inputStyle, labelStyle]\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            role=\"combobox\"\n            :aria-label=\"ariaLabel || (label === 'p-emptylabel' ? undefined : label)\"\n            :aria-labelledby=\"ariaLabelledby\"\n            aria-haspopup=\"listbox\"\n            :aria-expanded=\"overlayVisible\"\n            :aria-controls=\"id + '_list'\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            :aria-disabled=\"disabled\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            v-bind=\"ptm('label')\"\n        >\n            <slot name=\"value\" :value=\"d_value\" :placeholder=\"placeholder\">{{ label === 'p-emptylabel' ? '&nbsp;' : label ?? 'empty' }}</slot>\n        </span>\n        <slot v-if=\"isClearIconVisible\" name=\"clearicon\" :class=\"cx('clearIcon')\" :clearCallback=\"onClearClick\">\n            <component :is=\"clearIcon ? 'i' : 'TimesIcon'\" ref=\"clearIcon\" :class=\"[cx('clearIcon'), clearIcon]\" @click=\"onClearClick\" v-bind=\"ptm('clearIcon')\" data-pc-section=\"clearicon\" />\n        </slot>\n        <div :class=\"cx('dropdown')\" v-bind=\"ptm('dropdown')\">\n            <slot v-if=\"loading\" name=\"loadingicon\" :class=\"cx('loadingIcon')\">\n                <span v-if=\"loadingIcon\" :class=\"[cx('loadingIcon'), 'pi-spin', loadingIcon]\" aria-hidden=\"true\" v-bind=\"ptm('loadingIcon')\" />\n                <SpinnerIcon v-else :class=\"cx('loadingIcon')\" spin aria-hidden=\"true\" v-bind=\"ptm('loadingIcon')\" />\n            </slot>\n            <slot v-else name=\"dropdownicon\" :class=\"cx('dropdownIcon')\">\n                <component :is=\"dropdownIcon ? 'span' : 'ChevronDownIcon'\" :class=\"[cx('dropdownIcon'), dropdownIcon]\" aria-hidden=\"true\" v-bind=\"ptm('dropdownIcon')\" />\n            </slot>\n        </div>\n        <Portal :appendTo=\"appendTo\">\n            <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @after-enter=\"onOverlayAfterEnter\" @leave=\"onOverlayLeave\" @after-leave=\"onOverlayAfterLeave\" v-bind=\"ptm('transition')\">\n                <div v-if=\"overlayVisible\" :ref=\"overlayRef\" :class=\"[cx('overlay'), panelClass, overlayClass]\" :style=\"[panelStyle, overlayStyle]\" @click=\"onOverlayClick\" @keydown=\"onOverlayKeyDown\" v-bind=\"ptm('overlay')\">\n                    <span\n                        ref=\"firstHiddenFocusableElementOnOverlay\"\n                        role=\"presentation\"\n                        aria-hidden=\"true\"\n                        class=\"p-hidden-accessible p-hidden-focusable\"\n                        :tabindex=\"0\"\n                        @focus=\"onFirstHiddenFocus\"\n                        v-bind=\"ptm('hiddenFirstFocusableEl')\"\n                        :data-p-hidden-accessible=\"true\"\n                        :data-p-hidden-focusable=\"true\"\n                    ></span>\n                    <slot name=\"header\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n                    <div v-if=\"filter\" :class=\"cx('header')\" v-bind=\"ptm('header')\">\n                        <IconField :unstyled=\"unstyled\" :pt=\"ptm('pcFilterContainer')\">\n                            <InputText\n                                ref=\"filterInput\"\n                                type=\"text\"\n                                :value=\"filterValue\"\n                                @vue:mounted=\"onFilterUpdated\"\n                                @vue:updated=\"onFilterUpdated\"\n                                :class=\"cx('pcFilter')\"\n                                :placeholder=\"filterPlaceholder\"\n                                :variant=\"variant\"\n                                :unstyled=\"unstyled\"\n                                role=\"searchbox\"\n                                autocomplete=\"off\"\n                                :aria-owns=\"id + '_list'\"\n                                :aria-activedescendant=\"focusedOptionId\"\n                                @keydown=\"onFilterKeyDown\"\n                                @blur=\"onFilterBlur\"\n                                @input=\"onFilterChange\"\n                                :pt=\"ptm('pcFilter')\"\n                            />\n                            <InputIcon :unstyled=\"unstyled\" :pt=\"ptm('pcFilterIconContainer')\">\n                                <slot name=\"filtericon\">\n                                    <span v-if=\"filterIcon\" :class=\"filterIcon\" v-bind=\"ptm('filterIcon')\" />\n                                    <SearchIcon v-else v-bind=\"ptm('filterIcon')\" />\n                                </slot>\n                            </InputIcon>\n                        </IconField>\n                        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenFilterResult')\" :data-p-hidden-accessible=\"true\">\n                            {{ filterResultMessageText }}\n                        </span>\n                    </div>\n                    <div :class=\"cx('listContainer')\" :style=\"{ 'max-height': virtualScrollerDisabled ? scrollHeight : '' }\" v-bind=\"ptm('listContainer')\">\n                        <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :items=\"visibleOptions\" :style=\"{ height: scrollHeight }\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                            <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                                <ul :ref=\"(el) => listRef(el, contentRef)\" :id=\"id + '_list'\" :class=\"[cx('list'), styleClass]\" :style=\"contentStyle\" role=\"listbox\" v-bind=\"ptm('list')\">\n                                    <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                                        <li\n                                            v-if=\"isOptionGroup(option)\"\n                                            :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                            :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                            :class=\"cx('optionGroup')\"\n                                            role=\"option\"\n                                            v-bind=\"ptm('optionGroup')\"\n                                        >\n                                            <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">\n                                                <span :class=\"cx('optionGroupLabel')\" v-bind=\"ptm('optionGroupLabel')\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                            </slot>\n                                        </li>\n                                        <li\n                                            v-else\n                                            :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                            v-ripple\n                                            :class=\"cx('option', { option, focusedOption: getOptionIndex(i, getItemOptions) })\"\n                                            :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                            role=\"option\"\n                                            :aria-label=\"getOptionLabel(option)\"\n                                            :aria-selected=\"isSelected(option)\"\n                                            :aria-disabled=\"isOptionDisabled(option)\"\n                                            :aria-setsize=\"ariaSetSize\"\n                                            :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                            @click=\"onOptionSelect($event, option)\"\n                                            @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                            :data-p-selected=\"isSelected(option)\"\n                                            :data-p-focused=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                            :data-p-disabled=\"isOptionDisabled(option)\"\n                                            v-bind=\"getPTItemOptions(option, getItemOptions, i, 'option')\"\n                                        >\n                                            <template v-if=\"checkmark\">\n                                                <CheckIcon v-if=\"isSelected(option)\" :class=\"cx('optionCheckIcon')\" v-bind=\"ptm('optionCheckIcon')\" />\n                                                <BlankIcon v-else :class=\"cx('optionBlankIcon')\" v-bind=\"ptm('optionBlankIcon')\" />\n                                            </template>\n                                            <slot name=\"option\" :option=\"option\" :selected=\"isSelected(option)\" :index=\"getOptionIndex(i, getItemOptions)\">\n                                                <span :class=\"cx('optionLabel')\" v-bind=\"ptm('optionLabel')\">{{ getOptionLabel(option) }}</span>\n                                            </slot>\n                                        </li>\n                                    </template>\n                                    <li v-if=\"filterValue && (!items || (items && items.length === 0))\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\" :data-p-hidden-accessible=\"true\">\n                                        <slot name=\"emptyfilter\">{{ emptyFilterMessageText }}</slot>\n                                    </li>\n                                    <li v-else-if=\"!options || (options && options.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\" :data-p-hidden-accessible=\"true\">\n                                        <slot name=\"empty\">{{ emptyMessageText }}</slot>\n                                    </li>\n                                </ul>\n                            </template>\n                            <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                                <slot name=\"loader\" :options=\"options\"></slot>\n                            </template>\n                        </VirtualScroller>\n                    </div>\n                    <slot name=\"footer\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n                    <span v-if=\"!options || (options && options.length === 0)\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenEmptyMessage')\" :data-p-hidden-accessible=\"true\">\n                        {{ emptyMessageText }}\n                    </span>\n                    <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n                        {{ selectedMessageText }}\n                    </span>\n                    <span\n                        ref=\"lastHiddenFocusableElementOnOverlay\"\n                        role=\"presentation\"\n                        aria-hidden=\"true\"\n                        class=\"p-hidden-accessible p-hidden-focusable\"\n                        :tabindex=\"0\"\n                        @focus=\"onLastHiddenFocus\"\n                        v-bind=\"ptm('hiddenLastFocusableEl')\"\n                        :data-p-hidden-accessible=\"true\"\n                        :data-p-hidden-focusable=\"true\"\n                    ></span>\n                </div>\n            </transition>\n        </Portal>\n    </div>\n</template>\n\n<script>\nimport { absolutePosition, addStyle, findSingle, focus, getFirstFocusableElement, getFocusableElements, getLastFocusableElement, getOuterWidth, isAndroid, isTouchDevice, isVisible, relativePosition } from '@primeuix/utils/dom';\nimport { equals, findLastIndex, isNotEmpty, isPrintableCharacter, resolveFieldData } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { FilterService } from '@primevue/core/api';\nimport { ConnectedOverlayScrollHandler, UniqueComponentId } from '@primevue/core/utils';\nimport BlankIcon from '@primevue/icons/blank';\nimport CheckIcon from '@primevue/icons/check';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport SearchIcon from '@primevue/icons/search';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport TimesIcon from '@primevue/icons/times';\nimport IconField from 'primevue/iconfield';\nimport InputIcon from 'primevue/inputicon';\nimport InputText from 'primevue/inputtext';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseSelect from './BaseSelect.vue';\n\nexport default {\n    name: 'Select',\n    extends: BaseSelect,\n    inheritAttrs: false,\n    emits: ['change', 'focus', 'blur', 'before-show', 'before-hide', 'show', 'hide', 'filter'],\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    labelClickListener: null,\n    overlay: null,\n    list: null,\n    virtualScroller: null,\n    searchTimeout: null,\n    searchValue: null,\n    isModelValueChanged: false,\n    data() {\n        return {\n            id: this.$attrs.id,\n            clicked: false,\n            focused: false,\n            focusedOptionIndex: -1,\n            filterValue: null,\n            overlayVisible: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        modelValue() {\n            this.isModelValueChanged = true;\n        },\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n        this.bindLabelClickListener();\n    },\n    updated() {\n        if (this.overlayVisible && this.isModelValueChanged) {\n            this.scrollInView(this.findSelectedOptionIndex());\n        }\n\n        this.isModelValueChanged = false;\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindLabelClickListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n            ZIndex.clear(this.overlay);\n            this.overlay = null;\n        }\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? resolveFieldData(option, this.optionLabel) : option;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTItemOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    option,\n                    index,\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        show(isFocus) {\n            this.$emit('before-show');\n            this.overlayVisible = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex();\n\n            isFocus && focus(this.$refs.focusInput);\n        },\n        hide(isFocus) {\n            const _hide = () => {\n                this.$emit('before-hide');\n                this.overlayVisible = false;\n                this.clicked = false;\n                this.focusedOptionIndex = -1;\n                this.searchValue = '';\n\n                this.resetFilterOnHide && (this.filterValue = null);\n                isFocus && focus(this.$refs.focusInput);\n            };\n\n            setTimeout(() => {\n                _hide();\n            }, 0); // For ScreenReaders\n        },\n        onFocus(event) {\n            if (this.disabled) {\n                // For ScreenReaders\n                return;\n            }\n\n            this.focused = true;\n\n            if (this.overlayVisible) {\n                this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex();\n                this.scrollInView(this.focusedOptionIndex);\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n            this.formField.onBlur?.(event);\n        },\n        onKeyDown(event) {\n            if (this.disabled || isAndroid()) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event, this.editable);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, this.editable);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, this.editable);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, this.editable);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event, this.editable);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'Backspace':\n                    this.onBackspaceKey(event, this.editable);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        !this.overlayVisible && this.show();\n                        !this.editable && this.searchOptions(event, event.key);\n                    }\n\n                    break;\n            }\n\n            this.clicked = false;\n        },\n        onEditableInput(event) {\n            const value = event.target.value;\n\n            this.searchValue = '';\n            const matched = this.searchOptions(event, value);\n\n            !matched && (this.focusedOptionIndex = -1);\n\n            this.updateModel(event, value);\n\n            !this.overlayVisible && isNotEmpty(value) && this.show();\n        },\n        onContainerClick(event) {\n            if (this.disabled || this.loading) {\n                return;\n            }\n\n            if (event.target.tagName === 'INPUT' || event.target.getAttribute('data-pc-section') === 'clearicon' || event.target.closest('[data-pc-section=\"clearicon\"]')) {\n                return;\n            } else if (!this.overlay || !this.overlay.contains(event.target)) {\n                this.overlayVisible ? this.hide(true) : this.show(true);\n            }\n\n            this.clicked = true;\n        },\n        onClearClick(event) {\n            this.updateModel(event, null);\n            this.resetFilterOnClear && (this.filterValue = null);\n        },\n        onFirstHiddenFocus(event) {\n            const focusableEl = event.relatedTarget === this.$refs.focusInput ? getFirstFocusableElement(this.overlay, ':not([data-p-hidden-focusable=\"true\"])') : this.$refs.focusInput;\n\n            focus(focusableEl);\n        },\n        onLastHiddenFocus(event) {\n            const focusableEl = event.relatedTarget === this.$refs.focusInput ? getLastFocusableElement(this.overlay, ':not([data-p-hidden-focusable=\"true\"])') : this.$refs.focusInput;\n\n            focus(focusableEl);\n        },\n        onOptionSelect(event, option, isHide = true) {\n            const value = this.getOptionValue(option);\n\n            this.updateModel(event, value);\n            isHide && this.hide(true);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onFilterChange(event) {\n            const value = event.target.value;\n\n            this.filterValue = value;\n            this.focusedOptionIndex = -1;\n            this.$emit('filter', { originalEvent: event, value });\n\n            !this.virtualScrollerDisabled && this.virtualScroller.scrollToIndex(0);\n        },\n        onFilterKeyDown(event) {\n            // Check if the event is part of a text composition process (e.g., for Asian languages).\n            // If event.isComposing is true, it means the user is still composing text and the input is not finalized.\n            if (event.isComposing) return;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event, true);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event, true);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = -1;\n        },\n        onFilterUpdated() {\n            if (this.overlayVisible) {\n                this.alignOverlay();\n            }\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        },\n        onOverlayKeyDown(event) {\n            switch (event.code) {\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            if (!this.overlayVisible) {\n                this.show();\n                this.editable && this.changeFocusedOptionIndex(event, this.findSelectedOptionIndex());\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findFirstOptionIndex() : this.findFirstFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onArrowUpKey(event, pressedInInputText = false) {\n            if (event.altKey && !pressedInInputText) {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.overlayVisible && this.hide();\n                event.preventDefault();\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findLastOptionIndex() : this.findLastFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n\n                !this.overlayVisible && this.show();\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(0, event.target.selectionStart);\n                } else {\n                    target.setSelectionRange(0, 0);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                this.changeFocusedOptionIndex(event, this.findFirstOptionIndex());\n\n                !this.overlayVisible && this.show();\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(event.target.selectionStart, target.value.length);\n                } else {\n                    const len = target.value.length;\n\n                    target.setSelectionRange(len, len);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                this.changeFocusedOptionIndex(event, this.findLastOptionIndex());\n\n                !this.overlayVisible && this.show();\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (!this.overlayVisible) {\n                this.focusedOptionIndex = -1; // reset\n                this.onArrowDownKey(event);\n            } else {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.hide();\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event, pressedInInputText = false) {\n            !pressedInInputText && this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            this.overlayVisible && this.hide(true);\n            event.preventDefault();\n            event.stopPropagation(); //@todo will be changed next versionss\n        },\n        onTabKey(event, pressedInInputText = false) {\n            if (!pressedInInputText) {\n                if (this.overlayVisible && this.hasFocusableElements()) {\n                    focus(this.$refs.firstHiddenFocusableElementOnOverlay);\n\n                    event.preventDefault();\n                } else {\n                    if (this.focusedOptionIndex !== -1) {\n                        this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                    }\n\n                    this.overlayVisible && this.hide(this.filter);\n                }\n            }\n        },\n        onBackspaceKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                !this.overlayVisible && this.show();\n            }\n        },\n        onOverlayEnter(el) {\n            ZIndex.set('overlay', el, this.$primevue.config.zIndex.overlay);\n\n            addStyle(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n            this.scrollInView();\n\n            setTimeout(() => {\n                this.autoFilterFocus && focus(this.$refs.filterInput.$el);\n            }, 1);\n        },\n        onOverlayAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            if (this.autoFilterFocus && this.filter) {\n                this.$nextTick(() => {\n                    focus(this.$refs.filterInput.$el);\n                });\n            }\n\n            this.$emit('hide');\n            this.overlay = null;\n        },\n        onOverlayAfterLeave(el) {\n            ZIndex.clear(el);\n        },\n        alignOverlay() {\n            if (this.appendTo === 'self') {\n                relativePosition(this.overlay, this.$el);\n            } else {\n                this.overlay.style.minWidth = getOuterWidth(this.$el) + 'px';\n                absolutePosition(this.overlay, this.$el);\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.overlay && !this.$el.contains(event.target) && !this.overlay.contains(event.target)) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible && !isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindLabelClickListener() {\n            if (!this.editable && !this.labelClickListener) {\n                const label = document.querySelector(`label[for=\"${this.labelId}\"]`);\n\n                if (label && isVisible(label)) {\n                    this.labelClickListener = () => {\n                        focus(this.$refs.focusInput);\n                    };\n\n                    label.addEventListener('click', this.labelClickListener);\n                }\n            }\n        },\n        unbindLabelClickListener() {\n            if (this.labelClickListener) {\n                const label = document.querySelector(`label[for=\"${this.labelId}\"]`);\n\n                if (label && isVisible(label)) {\n                    label.removeEventListener('click', this.labelClickListener);\n                }\n            }\n        },\n        hasFocusableElements() {\n            return getFocusableElements(this.overlay, ':not([data-p-hidden-focusable=\"true\"])').length > 0;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && typeof this.getOptionLabel(option) === 'string' && this.getOptionLabel(option)?.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isSelected(option) {\n            return equals(this.d_value, this.getOptionValue(option), this.equalityKey);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            return this.$filled ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n            let matched = false;\n\n            if (isNotEmpty(this.searchValue)) {\n                if (this.focusedOptionIndex !== -1) {\n                    optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                    optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n                } else {\n                    optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n                }\n\n                if (optionIndex !== -1) {\n                    matched = true;\n                }\n\n                if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                    optionIndex = this.findFirstFocusedOptionIndex();\n                }\n\n                if (optionIndex !== -1) {\n                    this.changeFocusedOptionIndex(event, optionIndex);\n                }\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus) {\n                    this.onOptionSelect(event, this.visibleOptions[index], false);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n                const element = findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.$filled) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex], false);\n            }\n        },\n        updateModel(event, value) {\n            this.writeValue(value, event);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        flatOptions(options) {\n            return (options || []).reduce((result, option, index) => {\n                result.push({ optionGroup: option, group: true, index });\n\n                const optionGroupChildren = this.getOptionGroupChildren(option);\n\n                optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n\n                return result;\n            }, []);\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        visibleOptions() {\n            const options = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];\n\n            if (this.filterValue) {\n                const filteredOptions = FilterService.filter(options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n                if (this.optionGroupLabel) {\n                    const optionGroups = this.options || [];\n                    const filtered = [];\n\n                    optionGroups.forEach((group) => {\n                        const groupChildren = this.getOptionGroupChildren(group);\n                        const filteredItems = groupChildren.filter((item) => filteredOptions.includes(item));\n\n                        if (filteredItems.length > 0) filtered.push({ ...group, [typeof this.optionGroupChildren === 'string' ? this.optionGroupChildren : 'items']: [...filteredItems] });\n                    });\n\n                    return this.flatOptions(filtered);\n                }\n\n                return filteredOptions;\n            }\n\n            return options;\n        },\n        // @deprecated use $filled instead\n        hasSelectedOption() {\n            return this.$filled;\n        },\n        label() {\n            const selectedOptionIndex = this.findSelectedOptionIndex();\n\n            return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions[selectedOptionIndex]) : this.placeholder || 'p-emptylabel';\n        },\n        editableInputValue() {\n            const selectedOptionIndex = this.findSelectedOptionIndex();\n\n            return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions[selectedOptionIndex]) : this.d_value || '';\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        filterResultMessageText() {\n            return isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.$filled ? this.selectionMessageText.replaceAll('{0}', '1') : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        isClearIconVisible() {\n            return this.showClear && this.d_value != null && isNotEmpty(this.options);\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        Portal,\n        InputIcon,\n        IconField,\n        TimesIcon,\n        ChevronDownIcon,\n        SpinnerIcon,\n        SearchIcon,\n        CheckIcon,\n        BlankIcon\n    }\n};\n</script>\n","<template>\n    <div ref=\"container\" :id=\"id\" :class=\"cx('root')\" @click=\"onContainerClick\" v-bind=\"ptmi('root')\">\n        <input\n            v-if=\"editable\"\n            ref=\"focusInput\"\n            :id=\"labelId || inputId\"\n            type=\"text\"\n            :class=\"[cx('label'), inputClass, labelClass]\"\n            :style=\"[inputStyle, labelStyle]\"\n            :value=\"editableInputValue\"\n            :placeholder=\"placeholder\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            :disabled=\"disabled\"\n            autocomplete=\"off\"\n            role=\"combobox\"\n            :aria-label=\"ariaLabel\"\n            :aria-labelledby=\"ariaLabelledby\"\n            aria-haspopup=\"listbox\"\n            :aria-expanded=\"overlayVisible\"\n            :aria-controls=\"id + '_list'\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            :aria-invalid=\"invalid || undefined\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            @input=\"onEditableInput\"\n            v-bind=\"ptm('label')\"\n        />\n        <span\n            v-else\n            ref=\"focusInput\"\n            :id=\"labelId || inputId\"\n            :class=\"[cx('label'), inputClass, labelClass]\"\n            :style=\"[inputStyle, labelStyle]\"\n            :tabindex=\"!disabled ? tabindex : -1\"\n            role=\"combobox\"\n            :aria-label=\"ariaLabel || (label === 'p-emptylabel' ? undefined : label)\"\n            :aria-labelledby=\"ariaLabelledby\"\n            aria-haspopup=\"listbox\"\n            :aria-expanded=\"overlayVisible\"\n            :aria-controls=\"id + '_list'\"\n            :aria-activedescendant=\"focused ? focusedOptionId : undefined\"\n            :aria-disabled=\"disabled\"\n            @focus=\"onFocus\"\n            @blur=\"onBlur\"\n            @keydown=\"onKeyDown\"\n            v-bind=\"ptm('label')\"\n        >\n            <slot name=\"value\" :value=\"d_value\" :placeholder=\"placeholder\">{{ label === 'p-emptylabel' ? '&nbsp;' : label ?? 'empty' }}</slot>\n        </span>\n        <slot v-if=\"isClearIconVisible\" name=\"clearicon\" :class=\"cx('clearIcon')\" :clearCallback=\"onClearClick\">\n            <component :is=\"clearIcon ? 'i' : 'TimesIcon'\" ref=\"clearIcon\" :class=\"[cx('clearIcon'), clearIcon]\" @click=\"onClearClick\" v-bind=\"ptm('clearIcon')\" data-pc-section=\"clearicon\" />\n        </slot>\n        <div :class=\"cx('dropdown')\" v-bind=\"ptm('dropdown')\">\n            <slot v-if=\"loading\" name=\"loadingicon\" :class=\"cx('loadingIcon')\">\n                <span v-if=\"loadingIcon\" :class=\"[cx('loadingIcon'), 'pi-spin', loadingIcon]\" aria-hidden=\"true\" v-bind=\"ptm('loadingIcon')\" />\n                <SpinnerIcon v-else :class=\"cx('loadingIcon')\" spin aria-hidden=\"true\" v-bind=\"ptm('loadingIcon')\" />\n            </slot>\n            <slot v-else name=\"dropdownicon\" :class=\"cx('dropdownIcon')\">\n                <component :is=\"dropdownIcon ? 'span' : 'ChevronDownIcon'\" :class=\"[cx('dropdownIcon'), dropdownIcon]\" aria-hidden=\"true\" v-bind=\"ptm('dropdownIcon')\" />\n            </slot>\n        </div>\n        <Portal :appendTo=\"appendTo\">\n            <transition name=\"p-connected-overlay\" @enter=\"onOverlayEnter\" @after-enter=\"onOverlayAfterEnter\" @leave=\"onOverlayLeave\" @after-leave=\"onOverlayAfterLeave\" v-bind=\"ptm('transition')\">\n                <div v-if=\"overlayVisible\" :ref=\"overlayRef\" :class=\"[cx('overlay'), panelClass, overlayClass]\" :style=\"[panelStyle, overlayStyle]\" @click=\"onOverlayClick\" @keydown=\"onOverlayKeyDown\" v-bind=\"ptm('overlay')\">\n                    <span\n                        ref=\"firstHiddenFocusableElementOnOverlay\"\n                        role=\"presentation\"\n                        aria-hidden=\"true\"\n                        class=\"p-hidden-accessible p-hidden-focusable\"\n                        :tabindex=\"0\"\n                        @focus=\"onFirstHiddenFocus\"\n                        v-bind=\"ptm('hiddenFirstFocusableEl')\"\n                        :data-p-hidden-accessible=\"true\"\n                        :data-p-hidden-focusable=\"true\"\n                    ></span>\n                    <slot name=\"header\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n                    <div v-if=\"filter\" :class=\"cx('header')\" v-bind=\"ptm('header')\">\n                        <IconField :unstyled=\"unstyled\" :pt=\"ptm('pcFilterContainer')\">\n                            <InputText\n                                ref=\"filterInput\"\n                                type=\"text\"\n                                :value=\"filterValue\"\n                                @vue:mounted=\"onFilterUpdated\"\n                                @vue:updated=\"onFilterUpdated\"\n                                :class=\"cx('pcFilter')\"\n                                :placeholder=\"filterPlaceholder\"\n                                :variant=\"variant\"\n                                :unstyled=\"unstyled\"\n                                role=\"searchbox\"\n                                autocomplete=\"off\"\n                                :aria-owns=\"id + '_list'\"\n                                :aria-activedescendant=\"focusedOptionId\"\n                                @keydown=\"onFilterKeyDown\"\n                                @blur=\"onFilterBlur\"\n                                @input=\"onFilterChange\"\n                                :pt=\"ptm('pcFilter')\"\n                            />\n                            <InputIcon :unstyled=\"unstyled\" :pt=\"ptm('pcFilterIconContainer')\">\n                                <slot name=\"filtericon\">\n                                    <span v-if=\"filterIcon\" :class=\"filterIcon\" v-bind=\"ptm('filterIcon')\" />\n                                    <SearchIcon v-else v-bind=\"ptm('filterIcon')\" />\n                                </slot>\n                            </InputIcon>\n                        </IconField>\n                        <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenFilterResult')\" :data-p-hidden-accessible=\"true\">\n                            {{ filterResultMessageText }}\n                        </span>\n                    </div>\n                    <div :class=\"cx('listContainer')\" :style=\"{ 'max-height': virtualScrollerDisabled ? scrollHeight : '' }\" v-bind=\"ptm('listContainer')\">\n                        <VirtualScroller :ref=\"virtualScrollerRef\" v-bind=\"virtualScrollerOptions\" :items=\"visibleOptions\" :style=\"{ height: scrollHeight }\" :tabindex=\"-1\" :disabled=\"virtualScrollerDisabled\" :pt=\"ptm('virtualScroller')\">\n                            <template v-slot:content=\"{ styleClass, contentRef, items, getItemOptions, contentStyle, itemSize }\">\n                                <ul :ref=\"(el) => listRef(el, contentRef)\" :id=\"id + '_list'\" :class=\"[cx('list'), styleClass]\" :style=\"contentStyle\" role=\"listbox\" v-bind=\"ptm('list')\">\n                                    <template v-for=\"(option, i) of items\" :key=\"getOptionRenderKey(option, getOptionIndex(i, getItemOptions))\">\n                                        <li\n                                            v-if=\"isOptionGroup(option)\"\n                                            :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                            :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                            :class=\"cx('optionGroup')\"\n                                            role=\"option\"\n                                            v-bind=\"ptm('optionGroup')\"\n                                        >\n                                            <slot name=\"optiongroup\" :option=\"option.optionGroup\" :index=\"getOptionIndex(i, getItemOptions)\">\n                                                <span :class=\"cx('optionGroupLabel')\" v-bind=\"ptm('optionGroupLabel')\">{{ getOptionGroupLabel(option.optionGroup) }}</span>\n                                            </slot>\n                                        </li>\n                                        <li\n                                            v-else\n                                            :id=\"id + '_' + getOptionIndex(i, getItemOptions)\"\n                                            v-ripple\n                                            :class=\"cx('option', { option, focusedOption: getOptionIndex(i, getItemOptions) })\"\n                                            :style=\"{ height: itemSize ? itemSize + 'px' : undefined }\"\n                                            role=\"option\"\n                                            :aria-label=\"getOptionLabel(option)\"\n                                            :aria-selected=\"isSelected(option)\"\n                                            :aria-disabled=\"isOptionDisabled(option)\"\n                                            :aria-setsize=\"ariaSetSize\"\n                                            :aria-posinset=\"getAriaPosInset(getOptionIndex(i, getItemOptions))\"\n                                            @click=\"onOptionSelect($event, option)\"\n                                            @mousemove=\"onOptionMouseMove($event, getOptionIndex(i, getItemOptions))\"\n                                            :data-p-selected=\"isSelected(option)\"\n                                            :data-p-focused=\"focusedOptionIndex === getOptionIndex(i, getItemOptions)\"\n                                            :data-p-disabled=\"isOptionDisabled(option)\"\n                                            v-bind=\"getPTItemOptions(option, getItemOptions, i, 'option')\"\n                                        >\n                                            <template v-if=\"checkmark\">\n                                                <CheckIcon v-if=\"isSelected(option)\" :class=\"cx('optionCheckIcon')\" v-bind=\"ptm('optionCheckIcon')\" />\n                                                <BlankIcon v-else :class=\"cx('optionBlankIcon')\" v-bind=\"ptm('optionBlankIcon')\" />\n                                            </template>\n                                            <slot name=\"option\" :option=\"option\" :selected=\"isSelected(option)\" :index=\"getOptionIndex(i, getItemOptions)\">\n                                                <span :class=\"cx('optionLabel')\" v-bind=\"ptm('optionLabel')\">{{ getOptionLabel(option) }}</span>\n                                            </slot>\n                                        </li>\n                                    </template>\n                                    <li v-if=\"filterValue && (!items || (items && items.length === 0))\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\" :data-p-hidden-accessible=\"true\">\n                                        <slot name=\"emptyfilter\">{{ emptyFilterMessageText }}</slot>\n                                    </li>\n                                    <li v-else-if=\"!options || (options && options.length === 0)\" :class=\"cx('emptyMessage')\" role=\"option\" v-bind=\"ptm('emptyMessage')\" :data-p-hidden-accessible=\"true\">\n                                        <slot name=\"empty\">{{ emptyMessageText }}</slot>\n                                    </li>\n                                </ul>\n                            </template>\n                            <template v-if=\"$slots.loader\" v-slot:loader=\"{ options }\">\n                                <slot name=\"loader\" :options=\"options\"></slot>\n                            </template>\n                        </VirtualScroller>\n                    </div>\n                    <slot name=\"footer\" :value=\"d_value\" :options=\"visibleOptions\"></slot>\n                    <span v-if=\"!options || (options && options.length === 0)\" role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenEmptyMessage')\" :data-p-hidden-accessible=\"true\">\n                        {{ emptyMessageText }}\n                    </span>\n                    <span role=\"status\" aria-live=\"polite\" class=\"p-hidden-accessible\" v-bind=\"ptm('hiddenSelectedMessage')\" :data-p-hidden-accessible=\"true\">\n                        {{ selectedMessageText }}\n                    </span>\n                    <span\n                        ref=\"lastHiddenFocusableElementOnOverlay\"\n                        role=\"presentation\"\n                        aria-hidden=\"true\"\n                        class=\"p-hidden-accessible p-hidden-focusable\"\n                        :tabindex=\"0\"\n                        @focus=\"onLastHiddenFocus\"\n                        v-bind=\"ptm('hiddenLastFocusableEl')\"\n                        :data-p-hidden-accessible=\"true\"\n                        :data-p-hidden-focusable=\"true\"\n                    ></span>\n                </div>\n            </transition>\n        </Portal>\n    </div>\n</template>\n\n<script>\nimport { absolutePosition, addStyle, findSingle, focus, getFirstFocusableElement, getFocusableElements, getLastFocusableElement, getOuterWidth, isAndroid, isTouchDevice, isVisible, relativePosition } from '@primeuix/utils/dom';\nimport { equals, findLastIndex, isNotEmpty, isPrintableCharacter, resolveFieldData } from '@primeuix/utils/object';\nimport { ZIndex } from '@primeuix/utils/zindex';\nimport { FilterService } from '@primevue/core/api';\nimport { ConnectedOverlayScrollHandler, UniqueComponentId } from '@primevue/core/utils';\nimport BlankIcon from '@primevue/icons/blank';\nimport CheckIcon from '@primevue/icons/check';\nimport ChevronDownIcon from '@primevue/icons/chevrondown';\nimport SearchIcon from '@primevue/icons/search';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport TimesIcon from '@primevue/icons/times';\nimport IconField from 'primevue/iconfield';\nimport InputIcon from 'primevue/inputicon';\nimport InputText from 'primevue/inputtext';\nimport OverlayEventBus from 'primevue/overlayeventbus';\nimport Portal from 'primevue/portal';\nimport Ripple from 'primevue/ripple';\nimport VirtualScroller from 'primevue/virtualscroller';\nimport BaseSelect from './BaseSelect.vue';\n\nexport default {\n    name: 'Select',\n    extends: BaseSelect,\n    inheritAttrs: false,\n    emits: ['change', 'focus', 'blur', 'before-show', 'before-hide', 'show', 'hide', 'filter'],\n    outsideClickListener: null,\n    scrollHandler: null,\n    resizeListener: null,\n    labelClickListener: null,\n    overlay: null,\n    list: null,\n    virtualScroller: null,\n    searchTimeout: null,\n    searchValue: null,\n    isModelValueChanged: false,\n    data() {\n        return {\n            id: this.$attrs.id,\n            clicked: false,\n            focused: false,\n            focusedOptionIndex: -1,\n            filterValue: null,\n            overlayVisible: false\n        };\n    },\n    watch: {\n        '$attrs.id': function (newValue) {\n            this.id = newValue || UniqueComponentId();\n        },\n        modelValue() {\n            this.isModelValueChanged = true;\n        },\n        options() {\n            this.autoUpdateModel();\n        }\n    },\n    mounted() {\n        this.id = this.id || UniqueComponentId();\n        this.autoUpdateModel();\n        this.bindLabelClickListener();\n    },\n    updated() {\n        if (this.overlayVisible && this.isModelValueChanged) {\n            this.scrollInView(this.findSelectedOptionIndex());\n        }\n\n        this.isModelValueChanged = false;\n    },\n    beforeUnmount() {\n        this.unbindOutsideClickListener();\n        this.unbindResizeListener();\n        this.unbindLabelClickListener();\n\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n\n        if (this.overlay) {\n            ZIndex.clear(this.overlay);\n            this.overlay = null;\n        }\n    },\n    methods: {\n        getOptionIndex(index, fn) {\n            return this.virtualScrollerDisabled ? index : fn && fn(index)['index'];\n        },\n        getOptionLabel(option) {\n            return this.optionLabel ? resolveFieldData(option, this.optionLabel) : option;\n        },\n        getOptionValue(option) {\n            return this.optionValue ? resolveFieldData(option, this.optionValue) : option;\n        },\n        getOptionRenderKey(option, index) {\n            return (this.dataKey ? resolveFieldData(option, this.dataKey) : this.getOptionLabel(option)) + '_' + index;\n        },\n        getPTItemOptions(option, itemOptions, index, key) {\n            return this.ptm(key, {\n                context: {\n                    option,\n                    index,\n                    selected: this.isSelected(option),\n                    focused: this.focusedOptionIndex === this.getOptionIndex(index, itemOptions),\n                    disabled: this.isOptionDisabled(option)\n                }\n            });\n        },\n        isOptionDisabled(option) {\n            return this.optionDisabled ? resolveFieldData(option, this.optionDisabled) : false;\n        },\n        isOptionGroup(option) {\n            return this.optionGroupLabel && option.optionGroup && option.group;\n        },\n        getOptionGroupLabel(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupLabel);\n        },\n        getOptionGroupChildren(optionGroup) {\n            return resolveFieldData(optionGroup, this.optionGroupChildren);\n        },\n        getAriaPosInset(index) {\n            return (this.optionGroupLabel ? index - this.visibleOptions.slice(0, index).filter((option) => this.isOptionGroup(option)).length : index) + 1;\n        },\n        show(isFocus) {\n            this.$emit('before-show');\n            this.overlayVisible = true;\n            this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex();\n\n            isFocus && focus(this.$refs.focusInput);\n        },\n        hide(isFocus) {\n            const _hide = () => {\n                this.$emit('before-hide');\n                this.overlayVisible = false;\n                this.clicked = false;\n                this.focusedOptionIndex = -1;\n                this.searchValue = '';\n\n                this.resetFilterOnHide && (this.filterValue = null);\n                isFocus && focus(this.$refs.focusInput);\n            };\n\n            setTimeout(() => {\n                _hide();\n            }, 0); // For ScreenReaders\n        },\n        onFocus(event) {\n            if (this.disabled) {\n                // For ScreenReaders\n                return;\n            }\n\n            this.focused = true;\n\n            if (this.overlayVisible) {\n                this.focusedOptionIndex = this.focusedOptionIndex !== -1 ? this.focusedOptionIndex : this.autoOptionFocus ? this.findFirstFocusedOptionIndex() : this.editable ? -1 : this.findSelectedOptionIndex();\n                this.scrollInView(this.focusedOptionIndex);\n            }\n\n            this.$emit('focus', event);\n        },\n        onBlur(event) {\n            this.focused = false;\n            this.focusedOptionIndex = -1;\n            this.searchValue = '';\n            this.$emit('blur', event);\n            this.formField.onBlur?.(event);\n        },\n        onKeyDown(event) {\n            if (this.disabled || isAndroid()) {\n                event.preventDefault();\n\n                return;\n            }\n\n            const metaKey = event.metaKey || event.ctrlKey;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event, this.editable);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, this.editable);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, this.editable);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, this.editable);\n                    break;\n\n                case 'PageDown':\n                    this.onPageDownKey(event);\n                    break;\n\n                case 'PageUp':\n                    this.onPageUpKey(event);\n                    break;\n\n                case 'Space':\n                    this.onSpaceKey(event, this.editable);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event);\n                    break;\n\n                case 'Backspace':\n                    this.onBackspaceKey(event, this.editable);\n                    break;\n\n                case 'ShiftLeft':\n                case 'ShiftRight':\n                    //NOOP\n                    break;\n\n                default:\n                    if (!metaKey && isPrintableCharacter(event.key)) {\n                        !this.overlayVisible && this.show();\n                        !this.editable && this.searchOptions(event, event.key);\n                    }\n\n                    break;\n            }\n\n            this.clicked = false;\n        },\n        onEditableInput(event) {\n            const value = event.target.value;\n\n            this.searchValue = '';\n            const matched = this.searchOptions(event, value);\n\n            !matched && (this.focusedOptionIndex = -1);\n\n            this.updateModel(event, value);\n\n            !this.overlayVisible && isNotEmpty(value) && this.show();\n        },\n        onContainerClick(event) {\n            if (this.disabled || this.loading) {\n                return;\n            }\n\n            if (event.target.tagName === 'INPUT' || event.target.getAttribute('data-pc-section') === 'clearicon' || event.target.closest('[data-pc-section=\"clearicon\"]')) {\n                return;\n            } else if (!this.overlay || !this.overlay.contains(event.target)) {\n                this.overlayVisible ? this.hide(true) : this.show(true);\n            }\n\n            this.clicked = true;\n        },\n        onClearClick(event) {\n            this.updateModel(event, null);\n            this.resetFilterOnClear && (this.filterValue = null);\n        },\n        onFirstHiddenFocus(event) {\n            const focusableEl = event.relatedTarget === this.$refs.focusInput ? getFirstFocusableElement(this.overlay, ':not([data-p-hidden-focusable=\"true\"])') : this.$refs.focusInput;\n\n            focus(focusableEl);\n        },\n        onLastHiddenFocus(event) {\n            const focusableEl = event.relatedTarget === this.$refs.focusInput ? getLastFocusableElement(this.overlay, ':not([data-p-hidden-focusable=\"true\"])') : this.$refs.focusInput;\n\n            focus(focusableEl);\n        },\n        onOptionSelect(event, option, isHide = true) {\n            const value = this.getOptionValue(option);\n\n            this.updateModel(event, value);\n            isHide && this.hide(true);\n        },\n        onOptionMouseMove(event, index) {\n            if (this.focusOnHover) {\n                this.changeFocusedOptionIndex(event, index);\n            }\n        },\n        onFilterChange(event) {\n            const value = event.target.value;\n\n            this.filterValue = value;\n            this.focusedOptionIndex = -1;\n            this.$emit('filter', { originalEvent: event, value });\n\n            !this.virtualScrollerDisabled && this.virtualScroller.scrollToIndex(0);\n        },\n        onFilterKeyDown(event) {\n            // Check if the event is part of a text composition process (e.g., for Asian languages).\n            // If event.isComposing is true, it means the user is still composing text and the input is not finalized.\n            if (event.isComposing) return;\n\n            switch (event.code) {\n                case 'ArrowDown':\n                    this.onArrowDownKey(event);\n                    break;\n\n                case 'ArrowUp':\n                    this.onArrowUpKey(event, true);\n                    break;\n\n                case 'ArrowLeft':\n                case 'ArrowRight':\n                    this.onArrowLeftKey(event, true);\n                    break;\n\n                case 'Home':\n                    this.onHomeKey(event, true);\n                    break;\n\n                case 'End':\n                    this.onEndKey(event, true);\n                    break;\n\n                case 'Enter':\n                case 'NumpadEnter':\n                    this.onEnterKey(event);\n                    break;\n\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                case 'Tab':\n                    this.onTabKey(event, true);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onFilterBlur() {\n            this.focusedOptionIndex = -1;\n        },\n        onFilterUpdated() {\n            if (this.overlayVisible) {\n                this.alignOverlay();\n            }\n        },\n        onOverlayClick(event) {\n            OverlayEventBus.emit('overlay-click', {\n                originalEvent: event,\n                target: this.$el\n            });\n        },\n        onOverlayKeyDown(event) {\n            switch (event.code) {\n                case 'Escape':\n                    this.onEscapeKey(event);\n                    break;\n\n                default:\n                    break;\n            }\n        },\n        onArrowDownKey(event) {\n            if (!this.overlayVisible) {\n                this.show();\n                this.editable && this.changeFocusedOptionIndex(event, this.findSelectedOptionIndex());\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findNextOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findFirstOptionIndex() : this.findFirstFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n            }\n\n            event.preventDefault();\n        },\n        onArrowUpKey(event, pressedInInputText = false) {\n            if (event.altKey && !pressedInInputText) {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.overlayVisible && this.hide();\n                event.preventDefault();\n            } else {\n                const optionIndex = this.focusedOptionIndex !== -1 ? this.findPrevOptionIndex(this.focusedOptionIndex) : this.clicked ? this.findLastOptionIndex() : this.findLastFocusedOptionIndex();\n\n                this.changeFocusedOptionIndex(event, optionIndex);\n\n                !this.overlayVisible && this.show();\n                event.preventDefault();\n            }\n        },\n        onArrowLeftKey(event, pressedInInputText = false) {\n            pressedInInputText && (this.focusedOptionIndex = -1);\n        },\n        onHomeKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(0, event.target.selectionStart);\n                } else {\n                    target.setSelectionRange(0, 0);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                this.changeFocusedOptionIndex(event, this.findFirstOptionIndex());\n\n                !this.overlayVisible && this.show();\n            }\n\n            event.preventDefault();\n        },\n        onEndKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                const target = event.currentTarget;\n\n                if (event.shiftKey) {\n                    target.setSelectionRange(event.target.selectionStart, target.value.length);\n                } else {\n                    const len = target.value.length;\n\n                    target.setSelectionRange(len, len);\n                    this.focusedOptionIndex = -1;\n                }\n            } else {\n                this.changeFocusedOptionIndex(event, this.findLastOptionIndex());\n\n                !this.overlayVisible && this.show();\n            }\n\n            event.preventDefault();\n        },\n        onPageUpKey(event) {\n            this.scrollInView(0);\n            event.preventDefault();\n        },\n        onPageDownKey(event) {\n            this.scrollInView(this.visibleOptions.length - 1);\n            event.preventDefault();\n        },\n        onEnterKey(event) {\n            if (!this.overlayVisible) {\n                this.focusedOptionIndex = -1; // reset\n                this.onArrowDownKey(event);\n            } else {\n                if (this.focusedOptionIndex !== -1) {\n                    this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                }\n\n                this.hide();\n            }\n\n            event.preventDefault();\n        },\n        onSpaceKey(event, pressedInInputText = false) {\n            !pressedInInputText && this.onEnterKey(event);\n        },\n        onEscapeKey(event) {\n            this.overlayVisible && this.hide(true);\n            event.preventDefault();\n            event.stopPropagation(); //@todo will be changed next versionss\n        },\n        onTabKey(event, pressedInInputText = false) {\n            if (!pressedInInputText) {\n                if (this.overlayVisible && this.hasFocusableElements()) {\n                    focus(this.$refs.firstHiddenFocusableElementOnOverlay);\n\n                    event.preventDefault();\n                } else {\n                    if (this.focusedOptionIndex !== -1) {\n                        this.onOptionSelect(event, this.visibleOptions[this.focusedOptionIndex]);\n                    }\n\n                    this.overlayVisible && this.hide(this.filter);\n                }\n            }\n        },\n        onBackspaceKey(event, pressedInInputText = false) {\n            if (pressedInInputText) {\n                !this.overlayVisible && this.show();\n            }\n        },\n        onOverlayEnter(el) {\n            ZIndex.set('overlay', el, this.$primevue.config.zIndex.overlay);\n\n            addStyle(el, { position: 'absolute', top: '0', left: '0' });\n            this.alignOverlay();\n            this.scrollInView();\n\n            setTimeout(() => {\n                this.autoFilterFocus && focus(this.$refs.filterInput.$el);\n            }, 1);\n        },\n        onOverlayAfterEnter() {\n            this.bindOutsideClickListener();\n            this.bindScrollListener();\n            this.bindResizeListener();\n\n            this.$emit('show');\n        },\n        onOverlayLeave() {\n            this.unbindOutsideClickListener();\n            this.unbindScrollListener();\n            this.unbindResizeListener();\n\n            if (this.autoFilterFocus && this.filter) {\n                this.$nextTick(() => {\n                    focus(this.$refs.filterInput.$el);\n                });\n            }\n\n            this.$emit('hide');\n            this.overlay = null;\n        },\n        onOverlayAfterLeave(el) {\n            ZIndex.clear(el);\n        },\n        alignOverlay() {\n            if (this.appendTo === 'self') {\n                relativePosition(this.overlay, this.$el);\n            } else {\n                this.overlay.style.minWidth = getOuterWidth(this.$el) + 'px';\n                absolutePosition(this.overlay, this.$el);\n            }\n        },\n        bindOutsideClickListener() {\n            if (!this.outsideClickListener) {\n                this.outsideClickListener = (event) => {\n                    if (this.overlayVisible && this.overlay && !this.$el.contains(event.target) && !this.overlay.contains(event.target)) {\n                        this.hide();\n                    }\n                };\n\n                document.addEventListener('click', this.outsideClickListener);\n            }\n        },\n        unbindOutsideClickListener() {\n            if (this.outsideClickListener) {\n                document.removeEventListener('click', this.outsideClickListener);\n                this.outsideClickListener = null;\n            }\n        },\n        bindScrollListener() {\n            if (!this.scrollHandler) {\n                this.scrollHandler = new ConnectedOverlayScrollHandler(this.$refs.container, () => {\n                    if (this.overlayVisible) {\n                        this.hide();\n                    }\n                });\n            }\n\n            this.scrollHandler.bindScrollListener();\n        },\n        unbindScrollListener() {\n            if (this.scrollHandler) {\n                this.scrollHandler.unbindScrollListener();\n            }\n        },\n        bindResizeListener() {\n            if (!this.resizeListener) {\n                this.resizeListener = () => {\n                    if (this.overlayVisible && !isTouchDevice()) {\n                        this.hide();\n                    }\n                };\n\n                window.addEventListener('resize', this.resizeListener);\n            }\n        },\n        unbindResizeListener() {\n            if (this.resizeListener) {\n                window.removeEventListener('resize', this.resizeListener);\n                this.resizeListener = null;\n            }\n        },\n        bindLabelClickListener() {\n            if (!this.editable && !this.labelClickListener) {\n                const label = document.querySelector(`label[for=\"${this.labelId}\"]`);\n\n                if (label && isVisible(label)) {\n                    this.labelClickListener = () => {\n                        focus(this.$refs.focusInput);\n                    };\n\n                    label.addEventListener('click', this.labelClickListener);\n                }\n            }\n        },\n        unbindLabelClickListener() {\n            if (this.labelClickListener) {\n                const label = document.querySelector(`label[for=\"${this.labelId}\"]`);\n\n                if (label && isVisible(label)) {\n                    label.removeEventListener('click', this.labelClickListener);\n                }\n            }\n        },\n        hasFocusableElements() {\n            return getFocusableElements(this.overlay, ':not([data-p-hidden-focusable=\"true\"])').length > 0;\n        },\n        isOptionMatched(option) {\n            return this.isValidOption(option) && typeof this.getOptionLabel(option) === 'string' && this.getOptionLabel(option)?.toLocaleLowerCase(this.filterLocale).startsWith(this.searchValue.toLocaleLowerCase(this.filterLocale));\n        },\n        isValidOption(option) {\n            return isNotEmpty(option) && !(this.isOptionDisabled(option) || this.isOptionGroup(option));\n        },\n        isValidSelectedOption(option) {\n            return this.isValidOption(option) && this.isSelected(option);\n        },\n        isSelected(option) {\n            return equals(this.d_value, this.getOptionValue(option), this.equalityKey);\n        },\n        findFirstOptionIndex() {\n            return this.visibleOptions.findIndex((option) => this.isValidOption(option));\n        },\n        findLastOptionIndex() {\n            return findLastIndex(this.visibleOptions, (option) => this.isValidOption(option));\n        },\n        findNextOptionIndex(index) {\n            const matchedOptionIndex = index < this.visibleOptions.length - 1 ? this.visibleOptions.slice(index + 1).findIndex((option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex + index + 1 : index;\n        },\n        findPrevOptionIndex(index) {\n            const matchedOptionIndex = index > 0 ? findLastIndex(this.visibleOptions.slice(0, index), (option) => this.isValidOption(option)) : -1;\n\n            return matchedOptionIndex > -1 ? matchedOptionIndex : index;\n        },\n        findSelectedOptionIndex() {\n            return this.$filled ? this.visibleOptions.findIndex((option) => this.isValidSelectedOption(option)) : -1;\n        },\n        findFirstFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findFirstOptionIndex() : selectedIndex;\n        },\n        findLastFocusedOptionIndex() {\n            const selectedIndex = this.findSelectedOptionIndex();\n\n            return selectedIndex < 0 ? this.findLastOptionIndex() : selectedIndex;\n        },\n        searchOptions(event, char) {\n            this.searchValue = (this.searchValue || '') + char;\n\n            let optionIndex = -1;\n            let matched = false;\n\n            if (isNotEmpty(this.searchValue)) {\n                if (this.focusedOptionIndex !== -1) {\n                    optionIndex = this.visibleOptions.slice(this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option));\n                    optionIndex = optionIndex === -1 ? this.visibleOptions.slice(0, this.focusedOptionIndex).findIndex((option) => this.isOptionMatched(option)) : optionIndex + this.focusedOptionIndex;\n                } else {\n                    optionIndex = this.visibleOptions.findIndex((option) => this.isOptionMatched(option));\n                }\n\n                if (optionIndex !== -1) {\n                    matched = true;\n                }\n\n                if (optionIndex === -1 && this.focusedOptionIndex === -1) {\n                    optionIndex = this.findFirstFocusedOptionIndex();\n                }\n\n                if (optionIndex !== -1) {\n                    this.changeFocusedOptionIndex(event, optionIndex);\n                }\n            }\n\n            if (this.searchTimeout) {\n                clearTimeout(this.searchTimeout);\n            }\n\n            this.searchTimeout = setTimeout(() => {\n                this.searchValue = '';\n                this.searchTimeout = null;\n            }, 500);\n\n            return matched;\n        },\n        changeFocusedOptionIndex(event, index) {\n            if (this.focusedOptionIndex !== index) {\n                this.focusedOptionIndex = index;\n                this.scrollInView();\n\n                if (this.selectOnFocus) {\n                    this.onOptionSelect(event, this.visibleOptions[index], false);\n                }\n            }\n        },\n        scrollInView(index = -1) {\n            this.$nextTick(() => {\n                const id = index !== -1 ? `${this.id}_${index}` : this.focusedOptionId;\n                const element = findSingle(this.list, `li[id=\"${id}\"]`);\n\n                if (element) {\n                    element.scrollIntoView && element.scrollIntoView({ block: 'nearest', inline: 'start' });\n                } else if (!this.virtualScrollerDisabled) {\n                    this.virtualScroller && this.virtualScroller.scrollToIndex(index !== -1 ? index : this.focusedOptionIndex);\n                }\n            });\n        },\n        autoUpdateModel() {\n            if (this.selectOnFocus && this.autoOptionFocus && !this.$filled) {\n                this.focusedOptionIndex = this.findFirstFocusedOptionIndex();\n                this.onOptionSelect(null, this.visibleOptions[this.focusedOptionIndex], false);\n            }\n        },\n        updateModel(event, value) {\n            this.writeValue(value, event);\n            this.$emit('change', { originalEvent: event, value });\n        },\n        flatOptions(options) {\n            return (options || []).reduce((result, option, index) => {\n                result.push({ optionGroup: option, group: true, index });\n\n                const optionGroupChildren = this.getOptionGroupChildren(option);\n\n                optionGroupChildren && optionGroupChildren.forEach((o) => result.push(o));\n\n                return result;\n            }, []);\n        },\n        overlayRef(el) {\n            this.overlay = el;\n        },\n        listRef(el, contentRef) {\n            this.list = el;\n            contentRef && contentRef(el); // For VirtualScroller\n        },\n        virtualScrollerRef(el) {\n            this.virtualScroller = el;\n        }\n    },\n    computed: {\n        visibleOptions() {\n            const options = this.optionGroupLabel ? this.flatOptions(this.options) : this.options || [];\n\n            if (this.filterValue) {\n                const filteredOptions = FilterService.filter(options, this.searchFields, this.filterValue, this.filterMatchMode, this.filterLocale);\n\n                if (this.optionGroupLabel) {\n                    const optionGroups = this.options || [];\n                    const filtered = [];\n\n                    optionGroups.forEach((group) => {\n                        const groupChildren = this.getOptionGroupChildren(group);\n                        const filteredItems = groupChildren.filter((item) => filteredOptions.includes(item));\n\n                        if (filteredItems.length > 0) filtered.push({ ...group, [typeof this.optionGroupChildren === 'string' ? this.optionGroupChildren : 'items']: [...filteredItems] });\n                    });\n\n                    return this.flatOptions(filtered);\n                }\n\n                return filteredOptions;\n            }\n\n            return options;\n        },\n        // @deprecated use $filled instead\n        hasSelectedOption() {\n            return this.$filled;\n        },\n        label() {\n            const selectedOptionIndex = this.findSelectedOptionIndex();\n\n            return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions[selectedOptionIndex]) : this.placeholder || 'p-emptylabel';\n        },\n        editableInputValue() {\n            const selectedOptionIndex = this.findSelectedOptionIndex();\n\n            return selectedOptionIndex !== -1 ? this.getOptionLabel(this.visibleOptions[selectedOptionIndex]) : this.d_value || '';\n        },\n        equalityKey() {\n            return this.optionValue ? null : this.dataKey;\n        },\n        searchFields() {\n            return this.filterFields || [this.optionLabel];\n        },\n        filterResultMessageText() {\n            return isNotEmpty(this.visibleOptions) ? this.filterMessageText.replaceAll('{0}', this.visibleOptions.length) : this.emptyFilterMessageText;\n        },\n        filterMessageText() {\n            return this.filterMessage || this.$primevue.config.locale.searchMessage || '';\n        },\n        emptyFilterMessageText() {\n            return this.emptyFilterMessage || this.$primevue.config.locale.emptySearchMessage || this.$primevue.config.locale.emptyFilterMessage || '';\n        },\n        emptyMessageText() {\n            return this.emptyMessage || this.$primevue.config.locale.emptyMessage || '';\n        },\n        selectionMessageText() {\n            return this.selectionMessage || this.$primevue.config.locale.selectionMessage || '';\n        },\n        emptySelectionMessageText() {\n            return this.emptySelectionMessage || this.$primevue.config.locale.emptySelectionMessage || '';\n        },\n        selectedMessageText() {\n            return this.$filled ? this.selectionMessageText.replaceAll('{0}', '1') : this.emptySelectionMessageText;\n        },\n        focusedOptionId() {\n            return this.focusedOptionIndex !== -1 ? `${this.id}_${this.focusedOptionIndex}` : null;\n        },\n        ariaSetSize() {\n            return this.visibleOptions.filter((option) => !this.isOptionGroup(option)).length;\n        },\n        isClearIconVisible() {\n            return this.showClear && this.d_value != null && isNotEmpty(this.options);\n        },\n        virtualScrollerDisabled() {\n            return !this.virtualScrollerOptions;\n        }\n    },\n    directives: {\n        ripple: Ripple\n    },\n    components: {\n        InputText,\n        VirtualScroller,\n        Portal,\n        InputIcon,\n        IconField,\n        TimesIcon,\n        ChevronDownIcon,\n        SpinnerIcon,\n        SearchIcon,\n        CheckIcon,\n        BlankIcon\n    }\n};\n</script>\n"],"names":["name","BaseInput","props","options","Array","optionLabel","String","Function","optionValue","optionDisabled","optionGroupLabel","optionGroupChildren","scrollHeight","type","filter","Boolean","filterPlaceholder","filterLocale","filterMatchMode","filterFields","editable","placeholder","dataKey","showClear","inputId","inputClass","Object","inputStyle","labelId","labelClass","labelStyle","panelClass","overlayStyle","overlayClass","panelStyle","appendTo","loading","clearIcon","undefined","dropdownIcon","filterIcon","loadingIcon","resetFilterOnHide","resetFilterOnClear","virtualScrollerOptions","autoOptionFocus","autoFilterFocus","selectOnFocus","focusOnHover","highlightOnSelect","checkmark","filterMessage","selectionMessage","emptySelectionMessage","emptyFilterMessage","emptyMessage","tabindex","Number","ariaLabel","ariaLabelledby","style","SelectStyle","provide","$pcSelect","$parentInstance","BaseSelect","inheritAttrs","emits","outsideClickListener","scrollHandler","resizeListener","labelClickListener","overlay","list","virtualScroller","searchTimeout","searchValue","isModelValueChanged","data","id","$attrs","clicked","focused","focusedOptionIndex","filterValue","overlayVisible","watch","$attrsId","newValue","UniqueComponentId","modelValue","autoUpdateModel","mounted","bindLabelClickListener","updated","scrollInView","findSelectedOptionIndex","beforeUnmount","unbindOutsideClickListener","unbindResizeListener","unbindLabelClickListener","destroy","ZIndex","clear","methods","getOptionIndex","index","fn","virtualScrollerDisabled","getOptionLabel","option","resolveFieldData","getOptionValue","getOptionRenderKey","getPTItemOptions","itemOptions","key","ptm","context","selected","isSelected","disabled","isOptionDisabled","isOptionGroup","optionGroup","group","getOptionGroupLabel","getOptionGroupChildren","getAriaPosInset","_this","visibleOptions","slice","length","show","isFocus","$emit","findFirstFocusedOptionIndex","focus","$refs","focusInput","hide","_this2","_hide","setTimeout","onFocus","event","onBlur","_this$formField$onBlu","_this$formField","formField","call","onKeyDown","isAndroid","preventDefault","metaKey","ctrlKey","code","onArrowDownKey","onArrowUpKey","onArrowLeftKey","onHomeKey","onEndKey","onPageDownKey","onPageUpKey","onSpaceKey","onEnterKey","onEscapeKey","onTabKey","onBackspaceKey","isPrintableCharacter","searchOptions","onEditableInput","value","target","matched","updateModel","isNotEmpty","onContainerClick","tagName","getAttribute","closest","contains","onClearClick","onFirstHiddenFocus","focusableEl","relatedTarget","getFirstFocusableElement","onLastHiddenFocus","getLastFocusableElement","onOptionSelect","isHide","arguments","onOptionMouseMove","changeFocusedOptionIndex","onFilterChange","originalEvent","scrollToIndex","onFilterKeyDown","isComposing","onFilterBlur","onFilterUpdated","alignOverlay","onOverlayClick","OverlayEventBus","emit","$el","onOverlayKeyDown","optionIndex","findNextOptionIndex","findFirstOptionIndex","pressedInInputText","altKey","findPrevOptionIndex","findLastOptionIndex","findLastFocusedOptionIndex","currentTarget","shiftKey","setSelectionRange","selectionStart","len","stopPropagation","hasFocusableElements","firstHiddenFocusableElementOnOverlay","onOverlayEnter","el","_this3","set","$primevue","config","zIndex","addStyle","position","top","left","filterInput","onOverlayAfterEnter","bindOutsideClickListener","bindScrollListener","bindResizeListener","onOverlayLeave","_this4","unbindScrollListener","$nextTick","onOverlayAfterLeave","relativePosition","minWidth","getOuterWidth","absolutePosition","_this5","document","addEventListener","removeEventListener","_this6","ConnectedOverlayScrollHandler","container","_this7","isTouchDevice","window","_this8","label","querySelector","concat","isVisible","getFocusableElements","isOptionMatched","_this$getOptionLabel","isValidOption","toLocaleLowerCase","startsWith","isValidSelectedOption","equals","d_value","equalityKey","_this9","findIndex","_this10","findLastIndex","_this11","matchedOptionIndex","_this12","_this13","$filled","selectedIndex","char","_this14","clearTimeout","_this15","focusedOptionId","element","findSingle","scrollIntoView","block","inline","writeValue","flatOptions","_this16","reduce","result","push","forEach","o","overlayRef","listRef","contentRef","virtualScrollerRef","computed","_this17","filteredOptions","FilterService","searchFields","optionGroups","filtered","groupChildren","filteredItems","item","includes","_objectSpread","_defineProperty","_toConsumableArray","hasSelectedOption","selectedOptionIndex","editableInputValue","filterResultMessageText","filterMessageText","replaceAll","emptyFilterMessageText","locale","searchMessage","emptySearchMessage","emptyMessageText","selectionMessageText","emptySelectionMessageText","selectedMessageText","ariaSetSize","_this18","isClearIconVisible","directives","ripple","Ripple","components","InputText","VirtualScroller","Portal","InputIcon","IconField","TimesIcon","ChevronDownIcon","SpinnerIcon","SearchIcon","CheckIcon","BlankIcon","_openBlock","_createElementBlock","_mergeProps","ref","$data","_ctx","cx","onClick","$options","apply","ptmi","autocomplete","role","invalid","onKeydown","onInput","_hoisted_2","_renderSlot","$slots","_$options$label","_createTextVNode","_toDisplayString","clearCallback","_createBlock","_resolveDynamicComponent","_createElementVNode","_component_SpinnerIcon","spin","_createVNode","_component_Portal","_Transition","onEnter","onAfterEnter","onLeave","onAfterLeave","_component_IconField","unstyled","pt","_component_InputText","onVnodeMounted","onVnodeUpdated","variant","_component_InputIcon","_component_SearchIcon","_component_VirtualScroller","items","content","_withCtx","_ref","styleClass","getItemOptions","contentStyle","itemSize","_Fragment","_renderList","i","height","_withDirectives","$event","onMousemove","_component_CheckIcon","_component_BlankIcon","loader","_ref2"],"mappings":"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"}