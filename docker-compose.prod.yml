services:
    # PHP Service
    app:
        build:
            context: ./
            dockerfile: ./backend/Dockerfile
        restart: unless-stopped
        working_dir: /var/www/backend
        volumes:
            - .:/var/www
        networks:
            - app-network

    # Node Service (запускается только при сборке фронтенда)
    node:
        build:
            context: .
            dockerfile: ./frontend/Dockerfile
        volumes:
            - .:/var/www

    # Nginx Service for Laravel API
    api-webserver:
        image: nginx:latest
        restart: unless-stopped
        ports:
            - "82:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/conf.d/api.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network

    # Nginx Service for Static Frontend
    frontend-webserver:
        image: nginx:latest
        restart: unless-stopped
        ports:
            - "8080:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/conf.d/frontend.conf:/etc/nginx/conf.d/default.conf
        networks:
            - app-network

    # PostgreSQL Service
    db:
        image: postgres:13.0
        restart: always
        ports:
            - 5434:5432
        environment:
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_USER: ${DB_USERNAME}
            POSTGRES_DB: sposchedule
        volumes:
            - db:/var/lib/postgresql/data
        networks:
            - app-network

# Docker Networks
networks:
    app-network:
        driver: bridge

# Docker Volumes
volumes:
    db:
